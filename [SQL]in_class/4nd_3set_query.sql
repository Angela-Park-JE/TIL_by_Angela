-- 4차시 3 집합쿼리, 집합 연산자

-- 1. 집합 쿼리
---- 집합 연산자를 사용한 쿼리. 
---- 하나의 SELECT 문장이 반환한 결과를 한 집합으로 봤을 때, 한 개 이상의 SELECT 문장이 집합 연산자로 연결된 형태
---- 여러개의 SELECT 문이 집합 연산자에 의헤 연결되어 하나의 결과 집합이 만들어진다.
SELECT FROM WHERE 
집합연산자
SELECT FROM WHERE
집합연산자
SELECT ...
---- 이때 각 SELECT 절의 컬럼 수와 순서에 의해 매칭되는 컬럼끼리 데이터 타입은 동일해야 한다.
---- 만약 데이터 타입이 동일하다면, 사용자가 원하지 않는 컬럼끼리도 작성 순서에 의해 붙을 수 있으니 주의해야 한다. 
---- 최종 반환되는 결과의 컬럼 명은 첫 SELECT 절의 컬럼 이름(Alias)을 따른다.
---- ORDER BY 절은 맨 마지막 SELECT 문장에서만 쓸 수 있다. 중간에 쓰면 오류가 난다.


-- 2. 집합 연산자
---- 집합 쿼리는 다음과 같은 집합 연산자를 사용해 SELECT 문장을 연결한다.
    UNION -- 합집합(중복값은 1회만 처리)
UNION ALL -- 합집합(중복값 모두 처리) UNION보다 자주 사용
INTERSECT -- 교집합
    MINUS -- 차집합(앞의 SELECT 문장 결과에서 뒤의 SELECT 문장 결과를 제함)
---- 각 SELECT 문이 반환하는 결과를 하나의 집합으로 간주하고 집합 연산자로 연결한다. 
---- MINUS는 쿼리 순서에 따라 결과가 달라지므로 주의한다.
---- 각 집합 결과 자체는 같아도 실행 시에따라 로우 순서는 임의적으로 다를 수 있다.


-- 참조하기
-- 다양한 조건을 걸 때 왜 WHERE 뒤에 다른 조건 대신 1=1을 쓸까?
-- 여러 조건들을 하나하나 따져 볼 때 첫 번째 조건을 잠시 주석 해야 할 때가 있다.
-- 이때 이 조건 뒤의 AND를 썼다 지웠다 해야하기 때문에 첫 번째 AND 전의 조건을 무조건 참인 조건을 적어둔다.
